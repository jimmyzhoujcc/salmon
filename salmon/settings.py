"""
Django settings for salmon project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Celery setting
import djcelery
djcelery.setup_loader()
BROKER_URL = 'redis://10.6.97.217:6379/0'
BROKER_URL = CELERY_RESULT_BACKEND = 'redis://10.6.97.217:6379/0'
BROKER_POOL_LIMIT = 0
CELERY_TIMEZONE='Asia/Shanghai'

# Backend setting
server='10.6.97.217'
'''
warning :
....\lib\site-packages\djcelery\managers.py:183:
TxIsolationWarning: Polling results with transaction isolation level repeatable-read
within the same transaction may give outdated results.
Be sure to commit the transaction for each poll iteration.
"Polling results with transaction isolation level "

[mysqld]
transaction-isolation = REPEATABLE-READ
CELERY_RESULT_BACKEND='djcelery.backends.database:DatabaseBackend'
'''

#CELERY_RESULT_BACKEND = 'redis://10.6.97.217:6379/0'
#CELERY_TIMEZONE='Asia/Shanghai'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'u*ew(s1l3f*ur9ok*qgw^(9(-#odoei+trb7t7nj$9a)d9h2jw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'djcelery',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]



ROOT_URLCONF = 'salmon.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'salmon.wsgi.application'
# WSGI_APPLICATION = 'salmon.wsgi.django_app'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'salmon',
	    'USER': 'root',
        'PASSWORD': '',
        'HOST': '',
        'PORT': '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

# USE_TZ = False
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR + '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)
#===========

#===========
# < -- droppable upload file by AJAX api start-->
MEDIA_URL = '/media/'
# MEDIA_ROOT above is disabled
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# < -- droppable upload file by AJAX api end-->

# REST_FRAMEWORK = {
#         'DEFAULT_PERMISSION_CLASSES': [
#             'rest_framework.permissions.IsAuthenticated',
#         ],
#         'DEFAULT_AUTHENTICATION_CLASSES': (
#             'rest_framework.authentication.BasicAuthentication',  # enables simple command line authentication
#             'rest_framework.authentication.SessionAuthentication',
#             'rest_framework.authentication.TokenAuthentication',
#         )
# }
